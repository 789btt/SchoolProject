import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;


import javax.swing.JOptionPane;


public class allFunctions {
	private ArrayList<Books> all_books=new ArrayList<Books>();
	private String url="jdbc:mysql://localhost/simple_library";
	private Connection c=null;
	
	public allFunctions(){
		try{
			Class.forName("com.mysql.jdbc.Driver");
			this.c=DriverManager.getConnection(url,"root","");
		}catch(Exception e){
			JOptionPane.showMessageDialog(null, "Database Not Connected");
		}
	}
	
public ArrayList<Books> search(int book,String isbn,String shelve){
	ResultSet x=null;
	
	String url="jdbc:mysql://localhost/simple_library";
	Connection c=null;
	PreparedStatement stm=null;
	try{
		Class.forName("com.mysql.jdbc.Driver");
		c=DriverManager.getConnection(url,"root","");
		String sql="select * from books where ";
		String s_book="idBooks = ? ";
		String s_isbn=" isbn like ? ";
		String s_shelve=" shelve_code like ? ";
		String join=" or ";
		String fin=" and ";
		
		if(book!=0){
			sql+=s_book+fin+"("+s_isbn+join+s_shelve+")";
			}
		else {
			
				sql+=s_isbn+join+s_shelve;	
			
		}
		System.out.println(sql);
		stm=c.prepareStatement(sql);//and isbn like ?% and shelve_code like ?%
		if(book!=0){
			stm.setInt(1, book);
			stm.setString(2, isbn+"%");
			stm.setString(3, shelve+"%");
		}else{
			stm.setString(1, isbn+"%");
			stm.setString(2, shelve+"%");
		}
		x=stm.executeQuery();
		
	}catch(Exception e){
		JOptionPane.showMessageDialog(null, "Database Error");
	}
	//ResultSet y=x;
	
	//System.out.println("out");
	return make_list(x);
}
private ArrayList<Books> make_list(ResultSet x){
	//ArrayList all;
if(x!=null){
	//System.out.println("here");
	
	try {
		while(x.next()){
			Books b=new Books();
			System.out.println(x.getInt("idBooks"));
			b.setId(x.getInt("idBooks"));
			b.setAuthor(x.getString("author"));
			b.setSubject(x.getString("subject"));
			b.setTitle(x.getString("title"));
			b.setShelvecode(x.getString("shelve_code"));
			b.setQuantity(x.getInt("quantity"));
			b.setPublisher(x.getString("publisher"));
			b.setIsbn(x.getString("isbn"));
			addBooks(b);
		}
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}
//System.out.println("hereout");
return getBooks();
}
private void addBooks(Books book){
	//System.out.println(book);
	all_books.add(book);
}
private ArrayList<Books> getBooks(){
	return this.all_books;
}
public boolean checkOut(int book_id,int std_id){
	String url="jdbc:mysql://localhost/simple_library";
	PreparedStatement stm=null;
	PreparedStatement stm2=null;
	ResultSet x1=null;
	ResultSet x2=null;
	int limit=1;
	try{
		Class.forName("com.mysql.jdbc.Driver");
		Connection c= DriverManager.getConnection(url,"root","");
		stm=c.prepareStatement("Select count(*) from stock where book_id=? and quantity>=?");
		stm.setInt(1, book_id);
		stm.setInt(2,limit);
		x1=stm.executeQuery();
		if(x1!=null){
			while(x1.next()){
				if(x1.getInt("count(*)")==1){
					stm2=c.prepareStatement("select count(*) from students where idStudents=?");
					stm2.setInt(1, std_id);
					x2=stm2.executeQuery();
					if(x2!=null){
					while(x2.next()){
						if(x2.getInt("count(*)")==1){
							//decreased in stock
							Stock s=new Stock();
							s.setBook_id(book_id);
							s.setQuantity(-1);
							s.save();
							//create a transaction in the transaction table
							String token =getToken();
							Transaction_Holder t=new Transaction_Holder();
							t.setBook_id(book_id);
							t.setStudent_id(std_id);
							t.setToken(token);
							t.save();
							return true;
						}
					}
					}
					
				}
			}
		}
	}catch(Exception e){
			
			e.printStackTrace();
		}
	
	return false;
}
private String getToken(){
TokenGenerator s=new TokenGenerator();
	return s.generateRandomString();
	
}

public boolean checkIn(int book_id,int std_id,String token) throws SQLException{
	try{
		ResultSet x=null;
		PreparedStatement stm=null;
		int hasOut=1;
		int hasComplete=0;
		//Class.forName("com.mysql.jdbc.Driver");
		//Connection c=DriverManager.getConnection(this.url,"root","");
		String sql="select count(*),idtransaction_all from transaction_all where book_id=? and student_id=? and check_out=? and complete=?";
		if(!token.equals("")){
			sql+=" and token =?";
		}		
		stm=this.c.prepareStatement(sql);
		stm.setInt(1, book_id);
		stm.setInt(2, std_id);
		stm.setInt(3, hasOut);
		stm.setInt(4, hasComplete);
		if(!token.equals("")){
			stm.setString(5, token);
		}
		
		x=stm.executeQuery();
		
		if(x!=null){
			while(x.next()){
				if(x.getInt("count(*)")==1){
					System.out.println("here");
					this.c.setAutoCommit(false);
					int check_in=1;
					int now_complete=1;
					int increase_stock_by=1;
					int transaction_id=x.getInt("idtransaction_all");
					System.out.println(transaction_id);
					String sql1="update transaction_all set check_in=? , date_time=now() , complete=? where idtransaction_all=?";
					PreparedStatement stm1=this.c.prepareStatement(sql1);
					stm1.setInt(1, check_in);
					stm1.setInt(2, now_complete);
					stm1.setInt(3, transaction_id);
					stm1.executeUpdate();
					System.out.println("here1");
					Stock s=new Stock();
					s.setBook_id(book_id);
					s.setQuantity(increase_stock_by);
					s.save();
					this.c.commit();
					System.out.println("here");
					return true;
				}
				System.out.println("Book not found of the given Data");
			}
		}
	}catch(Exception e){
	this.c.rollback();	
	}
	return false;
}
}
